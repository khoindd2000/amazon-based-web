[{"C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\reducer.js":"3","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\reportWebVitals.js":"4","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\StateProvider.js":"5","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Header.js":"6","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Checkout.js":"7","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Home.js":"8","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Subtotal.js":"9","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Product.js":"10","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\CheckoutProduct.js":"11","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Login.js":"12","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\firebase.js":"13","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Payment.js":"14","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\axios.js":"15","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Orders.js":"16","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Order.js":"17"},{"size":687,"mtime":1609339179201,"results":"18","hashOfConfig":"19"},{"size":2537,"mtime":1613227295164,"results":"20","hashOfConfig":"19"},{"size":1292,"mtime":1612796530736,"results":"21","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"19"},{"size":487,"mtime":1609120000921,"results":"23","hashOfConfig":"19"},{"size":2475,"mtime":1613226422269,"results":"24","hashOfConfig":"19"},{"size":1231,"mtime":1611670948192,"results":"25","hashOfConfig":"19"},{"size":3154,"mtime":1611673070793,"results":"26","hashOfConfig":"19"},{"size":1220,"mtime":1611806492308,"results":"27","hashOfConfig":"19"},{"size":1220,"mtime":1610695533462,"results":"28","hashOfConfig":"19"},{"size":1194,"mtime":1613226154854,"results":"29","hashOfConfig":"19"},{"size":2341,"mtime":1611761413533,"results":"30","hashOfConfig":"19"},{"size":705,"mtime":1609919862760,"results":"31","hashOfConfig":"19"},{"size":5883,"mtime":1613226807242,"results":"32","hashOfConfig":"19"},{"size":225,"mtime":1612536284420,"results":"33","hashOfConfig":"19"},{"size":1036,"mtime":1613225490247,"results":"34","hashOfConfig":"19"},{"size":1246,"mtime":1613226090443,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1jblwww",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"38"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\index.js",[],["82","83"],"C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\App.js",["84","85"],"import React, {useEffect} from \"react\";\nimport './App.css';\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport Checkout from \"./Checkout\";\nimport Login from \"./Login\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport {auth} from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport Payment from \"./Payment\";\nimport {loadStripe} from \"@stripe/stripe-js\";\nimport {Elements} from \"@stripe/react-stripe-js\";\nimport Orders from \"./Orders\";\n\nconst promise = loadStripe(\"pk_test_51IFfVdATM72ldvN0QdRpbGe3KgLWY1wNL71q3Um3go0URq6jnL71j5Gm7ZLKhn3GdlztmHO4zua5hpU8PE2o5RAo00pmQylft1\");\n//This key from stripe.com\n\n\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n\n  useEffect(()=>{\n    //will only run once when the app component load...\n\n    auth.onAuthStateChanged(authUser => {\n      console.log(\"THE USER IS >>> \", authUser);\n\n      if(authUser){\n        //the user just logged in or the user was logged in\n\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser\n        })\n      }\n      else{\n        //the user is logged out\n\n        dispatch({\n          type: \"SET_USER\",\n          user: null\n        })\n      }\n    })\n  },[])\n\n  return (\n    // BEM\n    <Router>\n      <div className=\"app\">\n        {/* <Header /> */}\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route path=\"/payment\">\n            <Header />\n            <Elements stripe={promise}>\n              <Payment />\n            </Elements>\n          </Route>\n          <Route path=\"/orders\">\n            <Header />\n            <Orders />\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n//npx create-react-app {Folder want to build the app}\n//npm i (material-UI)\n//Some install from the firebase\n//npm i firebase\n//npm i -g firebase-tools\n\n//firebase login\n//firebase init  -> hosting -> choose firebase project -> y until Github N\n//npm run build\n//firebase deploy\n\n\n//npm i -s react-flip-move//\n\n//npm i react-router-dom\n//npm i react-currency-format (for money)\n\n// npm i @stripe/stripe-js\n// npm i @stripe/react-stripe-js\n\n//npm i axios\n\n//In Index.js of FUNCTIONS\n// npm i express\n// npm i cors\n// npm i stripe\n// firebase emulators:start\n\n// firebase deploy --only functions // deploy functions","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\reducer.js",["86"],"export const initialState = {\r\n    basket: [],\r\n    user: null,\r\n};\r\n\r\n//Selector\r\nexport const getBasketTotal = (basket) =>\r\n    basket?.reduce((amount, item) => item.price + amount, 0);\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch(action.type){\r\n        case \"ADD_TO_BASKET\":\r\n            return {\r\n                ...state,\r\n                basket: [...state.basket, action.item]\r\n            };\r\n        case \"EMPTY_BASKET\":\r\n            return {\r\n                ...state,\r\n                basket: []\r\n            }\r\n        case \"REMOVE_FROM_BASKET\":\r\n            const index = state.basket.findIndex((basketItem) => basketItem.id === action.id);\r\n            let newBasket = [...state.basket];\r\n\r\n            if(index >= 0){\r\n                newBasket.splice(index, 1);//newBasket.splice(index, 1)\r\n            }\r\n            else{\r\n                console.warn(\"Can't remove product (id: ${action.id}) as it's not in the basket\");\r\n            }\r\n            return{\r\n                ...state,\r\n                basket: newBasket\r\n            };\r\n        case \"SET_USER\":\r\n            return{\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\StateProvider.js",[],"C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Header.js",["87","88"],"import React from 'react';\r\nimport \"./Header.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useStateValue } from './StateProvider';\r\nimport {auth} from \"./firebase\";\r\n\r\n\r\nfunction Header() {\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n\r\n    const handleAuthentication = () => {\r\n        if(user){\r\n            auth.signOut();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to=\"/\">\r\n                <img\r\n                    className=\"header_logo\"\r\n                    src=\"https://pngimg.com/uploads/amazon/amazon_PNG11.png\"\r\n                />\r\n            </Link>\r\n\r\n            <div className=\"header_search\">\r\n                <input\r\n                    className=\"header_searchInput\"\r\n                    type=\"text\"/>\r\n                <SearchIcon className=\"header_searchIcon\" />\r\n            </div>\r\n\r\n            <div className=\"header_nav\">\r\n                <Link to={!user && \"/login\"}>\r\n                {/* <Link to={\"/login\"}> */}\r\n                    <div onClick={handleAuthentication} className=\"header_option\">\r\n                        <span className=\"header_optionLineOne\">{user ? \"Hello \" + user.email : \"Hello guest\"}</span>\r\n                        <span className=\"header_optionLineTwo\">{user ? \"Sign out\" : \"Sign in\"}</span>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/orders\">\r\n                    <div className=\"header_option\">\r\n                        <span className=\"header_optionLineOne\">Returns</span>\r\n                        <span className=\"header_optionLineTwo\">& Orders</span>\r\n                    </div>\r\n                </Link>\r\n                <div className=\"header_option\">\r\n                    <span className=\"header_optionLineOne\">Your</span>\r\n                    <span className=\"header_optionLineTwo\">Prime</span>\r\n                </div>\r\n                <Link to=\"/checkout\">\r\n                    <div className=\"header_optionBasket\">\r\n                        <div className=\"BasketIcon\">\r\n                            <ShoppingBasketIcon />\r\n                        </div>\r\n                        <span className=\"header_optionLineTwo header_basketCount\">{basket?.length}</span>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Checkout.js",["89","90"],"import React from 'react';\r\nimport \"./Checkout.css\";\r\nimport { useStateValue } from './StateProvider';\r\nimport Subtotal from \"./Subtotal\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\n// import FlipMove from \"react-flip-move\";\r\n\r\nfunction Checkout() {\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout_left\">\r\n                <img className=\"checkout_ad\" src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\" />\r\n                <div>\r\n                    <h3>Hello, {user?.email}</h3>\r\n                    <h2 className=\"checkout_title\">Your Shopping Basket</h2>\r\n                    {/* <FlipMove> */}\r\n                    <div className=\"checkout_product\">\r\n                        {basket.map(item => (<CheckoutProduct id={item.id} title={item.title} image={item.image} price={item.price} rating={item.rating} />))}\r\n                    </div>\r\n                    {/* </FlipMove> */}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"checkout_right\">\r\n                <Subtotal />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Home.js",["91"],"import React from 'react';\r\nimport \"./Home.css\";\r\nimport Product from \"./Product\"\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home_container\">\r\n                <img\r\n                 className=\"home_image\"\r\n                 src=\"https://images-eu.ssl-images-amazon.com/images/G/02/digital/video/merch2016/Hero/Covid19/Generic/GWBleedingHero_ENG_COVIDUPDATE__XSite_1500x600_PV_en-GB._CB428684220_.jpg\">\r\n                 </img>\r\n                 <div className=\"home_row\">\r\n                     <Product\r\n                        id=\"12345678\"\r\n                        title=\"The Lean Startup: How Constant Innovation Creates Radically Successful Businesses Paperback\"\r\n                        price={11.96}\r\n                        image=\"https://images-na.ssl-images-amazon.com/images/I/51Zymoq7UnL._AC_SY400_.jpg\"\r\n                        rating={5}\r\n                    />\r\n                     <Product \r\n                        id=\"49538094\"\r\n                        title=\"Kenwood kMix Stand Mixer for Baking, Stylish Kitchen Mixer with K-beater, Dough Hook and Whisk, 5 litre Glass Bowl\"\r\n                        price={239.0}\r\n                        rating={4}\r\n                        image=\"https://images-na.ssl-images-amazon.com/images/I/81O%2BGNdkzKL._AC_SX450_.jpg\"\r\n                     />\r\n                 </div>\r\n                 <div className=\"home_row\">\r\n                     <Product \r\n                        id=\"4903850\"\r\n                        title=\"Samsung LC49RG90SSUXEN 49' Curved LED Gaming Monitor\"\r\n                        price={199.99}\r\n                        rating={3}\r\n                        image=\"https://images-na.ssl-images-amazon.com/images/I/71Swqqe7XAL._AC_SX466_.jpg\"\r\n                     />\r\n                     <Product \r\n                        id=\"23445930\"\r\n                        title=\"Amazon Echo (3rd generation) | Smart speaker with Alexa, Charcoal Fabric\"\r\n                        price={98.99}\r\n                        rating={5}\r\n                        image=\"https://media.very.co.uk/i/very/P6LTG_SQ1_0000000071_CHARCOAL_SLf?$300x400_retinamobilex2$\"\r\n                     />\r\n                     <Product \r\n                        id=\"3254354345\"\r\n                        title=\"New Apple Ipad Pro (12.9-inch, Wi-fi, 128GB) - Silver (4th Generation)\"\r\n                        price={598.99}\r\n                        rating={4}\r\n                        image=\"https://images-na.ssl-images-amazon.com/images/I/816ctt5WV5L._AC_SX385_.jpg\"\r\n                     />\r\n                 </div>\r\n                 <div className=\"home_row\">\r\n                     <Product\r\n                        id=\"90829332\"\r\n                        title=\"Samsung LC49RG90SSUXEN 49' Curved LED Gaming Monitor - Super Ultra Wide Dual WQHD 5120 x 1440\"\r\n                        price={1094.98}\r\n                        rating={4}\r\n                        image=\"https://images-na.ssl-images-amazon.com/images/I/6125mFrzr6L._AC_SX355_.jpg\"\r\n                     />\r\n                 </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Subtotal.js",["92"],"import React from 'react';\r\nimport \"./Subtotal.css\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { useStateValue } from './StateProvider';\r\nimport { getBasketTotal } from './reducer';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction Subtotal() {\r\n    const history = useHistory();\r\n    const [{basket}, dispatch] = useStateValue();\r\n    return (\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat\r\n                renderText={(value)=>(\r\n                    <>\r\n                        <p>\r\n                            Subtotal ({basket?.length} items): <strong>{value}</strong>\r\n                        </p>\r\n                        <small className=\"subtotal_gift\">\r\n                            <input type=\"checkbox\"/> This order contains a gift\r\n                        </small>\r\n                    </>\r\n                )}\r\n                decimalScale={2}\r\n                value={getBasketTotal(basket)}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n            />\r\n            <button onClick={e => history.push(\"/payment\")}>Proceed to Checkout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal\r\n","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Product.js",["93","94"],"import React from 'react';\r\nimport \"./Product.css\"\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Product({ id, title, image, price, rating }) {\r\n    const[{basket}, dispatch] = useStateValue();\r\n\r\n    // console.log(\"This is the basket>>>\",basket);\r\n\r\n    const addToBasket = () =>{\r\n        //dispatch the item into the data layer\r\n        dispatch({\r\n            type:\"ADD_TO_BASKET\",\r\n            item:{\r\n                id: id,\r\n                title: title,\r\n                image: image,\r\n                price: price,\r\n                rating: rating,\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"product_info\">\r\n                <p>{title}</p>\r\n                <p className=\"product_price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                    <div className=\"product_rating\">\r\n                        {Array(rating).fill().map((_,i)=>(<p>⭐</p>))}\r\n                    </div>\r\n                </p>\r\n            </div>\r\n            <img src={image}></img>\r\n            <button onClick={addToBasket}>Add to basket</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\CheckoutProduct.js",["95","96"],"import React from 'react';\r\nimport \"./CheckoutProduct.css\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction CheckoutProduct({id, image, title, price, rating, hideButton}) {\r\n    const [{basket}, dispatch] = useStateValue();\r\n    const removeFromBasket = () =>{\r\n        //remove the item from the basket\r\n        dispatch({\r\n            type: \"REMOVE_FROM_BASKET\",\r\n            id: id,\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"checkoutProduct\">\r\n            <img className=\"checkoutProduct_image\" src={image} />\r\n            <div className=\"checkoutProduct_info\">\r\n                <p className=\"checkoutProduct_title\">{title}</p>\r\n                <p className=\"checkoutProduct_price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"checkoutProduct_rating\">\r\n                    {Array(rating).fill().map((_, i)=>(<p>⭐</p>))}\r\n                </div>\r\n                {!hideButton && (\r\n                    <button onClick={removeFromBasket}>Remove from basket</button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutProduct\r\n","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Login.js",["97"],"import React, {useState} from 'react';\r\nimport \"./Login.css\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport { auth } from './firebase';\r\n\r\nfunction Login() {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const signIn = e =>{\r\n        e.preventDefault();//prevent the page from refresh when the signin button is clicked\r\n\r\n        auth\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(auth => {\r\n                history.push('/');\r\n            })\r\n            .catch(error => alert(error.message))\r\n    }\r\n\r\n    const register = e =>{\r\n        e.preventDefault();\r\n\r\n        auth\r\n            .createUserWithEmailAndPassword(email,password)\r\n            .then((auth)=>{\r\n                //it successfully create a new user with email and password\r\n                console.log(auth)\r\n                if (auth)/*If the authentication is not empty*/{\r\n                    history.push('/');\r\n                }\r\n            })\r\n            .catch(error => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <Link to=\"/\">\r\n                <img className=\"login_logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png\" />\r\n            </Link>\r\n\r\n            <div className=\"login_container\">\r\n                <h1>Sign-in</h1>\r\n\r\n                <form>\r\n                    <h5>E-mail</h5>\r\n                    <input type=\"text\" className=\"input_box\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n\r\n                    <h5>Password</h5>\r\n                    <input type=\"password\" className=\"input_box\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n\r\n                    <button type=\"submit\" className=\"login_signInButton\" onClick={signIn}>Sign in</button>\r\n                </form>\r\n\r\n                <p>By signing-in you agree to AMAZON FAKE CLONE Condition of Use & Sale. Please see our Privacy Notice, our Cookies Notice and our Interest-Based Ads.</p>\r\n\r\n                <button onClick={register} className=\"login_registerButton\">Create your Amazon account</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\firebase.js",[],"C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Payment.js",["98","99"],"import { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport { React, useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport \"./Payment.css\";\r\nimport { useStateValue } from './StateProvider';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from './reducer';\r\nimport axios from './axios';\r\nimport { db } from \"./firebase\";\r\n\r\n\r\nfunction Payment() {\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n    const history = useHistory();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // generate the stripe secret which allow us to charge the customer\r\n\r\n        const getClientSecret = async () => {\r\n            const response = await axios({\r\n                method: \"post\",\r\n                // Stripe expects the total in a currencies submit\r\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret);\r\n        }\r\n\r\n        getClientSecret();\r\n    }, [basket]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        // do all the fancy stripe\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            //paymentIntent = payment confirmation\r\n\r\n            db\r\n                .collection(\"users\")\r\n                .doc(user?.uid)\r\n                .collection(\"orders\")\r\n                .doc(paymentIntent.id)\r\n                .set({\r\n                    basket: basket,\r\n                    amount: paymentIntent.amount,\r\n                    created: paymentIntent.created\r\n                });\r\n                \r\n\r\n            setSucceeded(true);\r\n            setError(null);\r\n            setProcessing(false);\r\n\r\n            dispatch({\r\n                type: \"EMPTY_BASKET\"\r\n            })\r\n\r\n            history.replace(\"/orders\");\r\n        })\r\n\r\n    }\r\n    const handleChange = event => {\r\n        // Listen for changes in the CardElement\r\n        // and display any errors as the customer types their card details\r\n        setDisabled(event.empty); // Set disable if the event is empty\r\n        setError(event.error ? event.error.message : \"\");\r\n    }\r\n    return (\r\n        <div className=\"payment\">\r\n            <div className=\"payment_container\">\r\n                <h1>\r\n                    Checkout (<Link to=\"/checkout\">{basket?.length} {(basket.length!=1)? \"items\" : \"item\"}</Link>)\r\n                </h1>\r\n\r\n\r\n                {/* Payment section - delivery address */}\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Delivery address</h3>\r\n                    </div>\r\n                    <div className=\"payment_address\">\r\n                        <p>{user?.email}</p>\r\n                        <p>Chung cu Thai An 4</p>\r\n                        <p>District 12, Hochiminh city</p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Payment section - Review Items */}\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n                    <div className=\"payment_items\">\r\n                        {basket.map(item => (\r\n                            <CheckoutProduct\r\n                                id={item.id}\r\n                                title={item.title}\r\n                                image={item.image}\r\n                                price={item.price}\r\n                                rating={item.rating}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Payment section - Payment Method */}\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Payment method</h3>\r\n                    </div>\r\n                    <div className=\"payment_details\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange}/>\r\n                            <div className=\"payment_priceContainer\">\r\n                                <CurrencyFormat \r\n                                    renderText={(value) => (\r\n                                        <h3>Order Total: {value}</h3>\r\n                                    )}\r\n                                    decimalScale={2}\r\n                                    value={getBasketTotal(basket)}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    prefix={\"$\"}\r\n                                />\r\n\r\n                                <button disabled={processing || disabled || succeeded}>\r\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            {/* Errors */}\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\axios.js",[],"C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Orders.js",["100","101"],"import React, {useState, useEffect} from 'react';\r\nimport {db} from \"./firebase\";\r\nimport \"./Orders.css\";\r\nimport { useStateValue } from './StateProvider';\r\nimport Order from \"./Order\";\r\n\r\nfunction Orders() {\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (user){\r\n            db.collection(\"users\").doc(user?.uid).collection(\"orders\").orderBy(\"created\", \"desc\").onSnapshot(snapshot => (\r\n                setOrders(snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })))\r\n            ))\r\n        }\r\n        else{\r\n            setOrders([])\r\n        }\r\n    } , [user])\r\n\r\n    return (\r\n        <div className=\"orders\">\r\n            <h1>Your orders</h1>\r\n\r\n            <div className=\"orders_order\">\r\n                {orders?.map(order => (\r\n                    <Order order={order} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","C:\\Users\\Admin\\Desktop\\Coding project\\Amazon\\amazon-clone\\src\\Order.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":20,"column":10,"nodeType":"108","messageId":"109","endLine":20,"endColumn":12},{"ruleId":"110","severity":1,"message":"111","line":45,"column":5,"nodeType":"112","endLine":45,"endColumn":7,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":31,"column":30,"nodeType":"116","messageId":"117","endLine":31,"endColumn":97},{"ruleId":"118","severity":1,"message":"119","line":11,"column":28,"nodeType":"120","messageId":"121","endLine":11,"endColumn":36},{"ruleId":"122","severity":1,"message":"123","line":22,"column":17,"nodeType":"124","endLine":25,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":9,"column":28,"nodeType":"120","messageId":"121","endLine":9,"endColumn":36},{"ruleId":"122","severity":1,"message":"123","line":13,"column":17,"nodeType":"124","endLine":13,"endColumn":147},{"ruleId":"122","severity":1,"message":"123","line":9,"column":17,"nodeType":"124","endLine":11,"endColumn":195},{"ruleId":"118","severity":1,"message":"119","line":10,"column":22,"nodeType":"120","messageId":"121","endLine":10,"endColumn":30},{"ruleId":"118","severity":1,"message":"125","line":6,"column":12,"nodeType":"120","messageId":"121","endLine":6,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":36,"column":13,"nodeType":"124","endLine":36,"endColumn":30},{"ruleId":"118","severity":1,"message":"125","line":6,"column":13,"nodeType":"120","messageId":"121","endLine":6,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":16,"column":13,"nodeType":"124","endLine":16,"endColumn":66},{"ruleId":"122","severity":1,"message":"123","line":40,"column":17,"nodeType":"124","endLine":40,"endColumn":154},{"ruleId":"118","severity":1,"message":"126","line":46,"column":15,"nodeType":"120","messageId":"121","endLine":46,"endColumn":22},{"ruleId":"127","severity":1,"message":"128","line":87,"column":84,"nodeType":"129","messageId":"109","endLine":87,"endColumn":86},{"ruleId":"118","severity":1,"message":"125","line":8,"column":13,"nodeType":"120","messageId":"121","endLine":8,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":8,"column":28,"nodeType":"120","messageId":"121","endLine":8,"endColumn":36},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["132"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'basket' is assigned a value but never used.","'payload' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},"Update the dependencies array to be: [dispatch]",{"range":"135","text":"136"},[1209,1211],"[dispatch]"]